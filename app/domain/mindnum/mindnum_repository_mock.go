// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/domain/mindnum/mindnum_repository.go
//
// Generated by this command:
//
//	mockgen -source=./app/domain/mindnum/mindnum_repository.go -destination=./app/domain/mindnum/mindnum_repository_mock.go -package=mindnum
//

// Package mindnum is a generated GoMock package.
package mindnum

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMindnumRepository is a mock of MindnumRepository interface.
type MockMindnumRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMindnumRepositoryMockRecorder
}

// MockMindnumRepositoryMockRecorder is the mock recorder for MockMindnumRepository.
type MockMindnumRepositoryMockRecorder struct {
	mock *MockMindnumRepository
}

// NewMockMindnumRepository creates a new mock instance.
func NewMockMindnumRepository(ctrl *gomock.Controller) *MockMindnumRepository {
	mock := &MockMindnumRepository{ctrl: ctrl}
	mock.recorder = &MockMindnumRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMindnumRepository) EXPECT() *MockMindnumRepositoryMockRecorder {
	return m.recorder
}

// FindByNumber mocks base method.
func (m *MockMindnumRepository) FindByNumber(number int) (*Mindnum, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByNumber", number)
	ret0, _ := ret[0].(*Mindnum)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByNumber indicates an expected call of FindByNumber.
func (mr *MockMindnumRepositoryMockRecorder) FindByNumber(number any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByNumber", reflect.TypeOf((*MockMindnumRepository)(nil).FindByNumber), number)
}
